<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	<bean id="config" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
		<list>
		<value>classpath:jdbc.properties</value>
		</list>
		</property>
	</bean>
	 <!-- 添加事务支持 -->
	 <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">   
	      <property name="dataSource" ref="dataSource"/> 
	 </bean>
	 <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	    <property name="jdbcUrl" value="${jdbc.jdbcUrl}"></property>
	    <property name="driverClass" value="${jdbc.driverClass}"></property>
	    <property name="user" value="${jdbc.user}"></property>
	    <property name="password" value="${jdbc.password}"></property>
<!-- 			    指定连接数据库连接池的最小连接数
		<property name="minPoolSize" value="10" />
		指定连接数据库连接池的最大连接数
		<property name="maxPoolSize" value="30" />
		指定连接数据库连接池的连接的最大空闲时间
		<property name="maxIdleTime" value="1800" />
		<property name="acquireIncrement" value="2" />
		<property name="maxStatements" value="0" />
		指定连接数据库连接池的初始化连接数
		<property name="initialPoolSize" value="2" />
		<property name="idleConnectionTestPeriod" value="1800" />
		<property name="acquireRetryAttempts" value="30" />
		<property name="breakAfterAcquireFailure" value="true" />
		<property name="testConnectionOnCheckout" value="false" /> -->
	</bean>

	  <!-- 获取sessionFactory工厂 -->
     <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!-- 基于hibernate配置文件整合hibernate --> 
        <property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
     </bean> 
     
      <bean id="gradeDao" class="com.grade.dao.impl.GradeDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
     </bean>

     <bean id="studentsDao" class="com.grade.dao.impl.StudentsDaoImpl">
        <property name="sessionFactory" ref="sessionFactory"></property>
     </bean>


     <bean id="gradeService" class="com.grade.service.impl.GradeServiceImpl">
        <property name="gradeDao" ref="gradeDao"></property>
     </bean>
   
     <bean id="studentsService" class="com.grade.service.impl.StudentsServiceImpl">
        <property name="studentsDao" ref="studentsDao"></property>
     </bean>  
 
	 <!-- 注解方式配置事物 :注意:自动扫描注解事务配置--> 
     <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven> 
     
     
     <!-- 类似于财务部门一样，类就是钱，所有需要类的实例都由srping去管理 -->
    <bean id="studentsAction" class="com.grade.action.StudentsAction" scope="prototype">
        <!-- setIs(myIndexService) -->
        <property name="is" ref="studentsService"/>
    </bean>
     
    <bean id="gradeAction" class="com.grade.action.GradeAction" scope="prototype">
        <!-- setIs(myIndexService) -->
        <property name="is" ref="gradeService"/>
    </bean>
</beans>
